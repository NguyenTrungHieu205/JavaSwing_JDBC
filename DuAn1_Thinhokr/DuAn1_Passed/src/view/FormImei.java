/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import static java.util.random.RandomGeneratorFactory.all;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import service.ImeiService;
import service.SanPhamService;
import service.impl.ImeiServiceImpl;
import service.impl.SanPhamServiceImpl;
import viewModel.ImeiViewModel;
import viewModel.SanPhamImeiViewModel;
import viewModel.SanPhamViewModel;
import viewModel.ViewSanPham;

/**
 *
 * @author Dell
 */
public class FormImei extends javax.swing.JFrame {

    /**
     * Creates new form FormKichThuoc
     */
    private final ImeiService imeiService = new ImeiServiceImpl();
    private final SanPhamService sanPhamService = new SanPhamServiceImpl();

    public FormImei() {
        initComponents();
        setLocationRelativeTo(null);
        loadTableImei(imeiService.getAll());
        loadTbXoa();
        loadCbSp();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        txtTimKiemImei.setText("Tìm kiếm");
        txtTimKiemSanPham.setText("Tìm kiếm");
        loadTableSanPham(imeiService.selectAllSanPhamBangSanPham());
    }

    // load bảng imei
    public void loadTableImei(ArrayList<ImeiViewModel> list) {
        DefaultTableModel model = (DefaultTableModel) tblimei.getModel();
        model.setRowCount(0);
        for (ImeiViewModel x : list) {
            model.addRow(new Object[]{x.getMaImei(), x.TrangThai2(), imeiService.getAllMaSP(x.getId_Sp())});
//            imeiService.getAllMaSP(x.getId_Sp()) == null ? "NULL" : imeiService.getAllMaSP(x.getId_Sp())
        }
    }

    // load bảng sản phẩm trong form imei
    public void loadTableSanPham(ArrayList<SanPhamImeiViewModel> list) {
        DefaultTableModel model = (DefaultTableModel) tblSanPhamBangImei.getModel();
        model.setRowCount(0);
        for (SanPhamImeiViewModel x : list) {
            model.addRow(new Object[]{x.getMaSp(), x.getTenSp(), x.getTenChip(), x.getTenDungLuong(),
                x.getTenKichThuoc(), x.getTenmanHing(), x.getTenMau(), x.getTenLoaiHang(), x.getTenPin(),
                x.getTenRam(), x.getTenNoiSanXuat(), x.getGiaBan(), x.getSoLuongTon(), x.trangThaiSanPham(), "Đã Có"});
        }
    }

    public void loadTbXoa() {
        ArrayList<ImeiViewModel> listim = imeiService.getAllXoa();

        DefaultTableModel model = (DefaultTableModel) tblimei1.getModel();
        model.setRowCount(0);
        for (ImeiViewModel x : listim) {
            model.addRow(new Object[]{x.getMaImei(), x.getId_Sp()});
        }
    }

    public void loadCbSp() {
        cbxIdSp.removeAllItems();
        cbxIdSp.addItem("Chọn Sản Phẩm");
        for (ViewSanPham x : sanPhamService.getList()) {
            cbxIdSp.addItem(x.getMaSp());
        }
    }

    private Integer trangThai() {
        if (rdo1.isSelected()) {
            return 0;
        } else if (rdo2.isSelected()) {
            return 1;
        } else if (rdo3.isSelected()) {
            return 2;
        } else {
            return 3;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMaDungLuong1 = new javax.swing.JTextField();
        rdo1 = new javax.swing.JRadioButton();
        rdo2 = new javax.swing.JRadioButton();
        rdo3 = new javax.swing.JRadioButton();
        rdo4 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblimei = new javax.swing.JTable();
        txtTimKiemImei = new javax.swing.JTextField();
        rdLocOnline = new javax.swing.JRadioButton();
        rdLocDaBan = new javax.swing.JRadioButton();
        rdLocNgungBan = new javax.swing.JRadioButton();
        rdLocDangChoHangve = new javax.swing.JRadioButton();
        rdTatCa = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        btnImport = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        cbxIdSp = new javax.swing.JComboBox<>();
        txtMaImei = new javax.swing.JTextField();
        txtMaSanPham = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSanPhamBangImei = new javax.swing.JTable();
        txtTimKiemSanPham = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblimei1 = new javax.swing.JTable();
        btnUpdate1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(37, 150, 190));

        jPanel1.setBackground(new java.awt.Color(158, 195, 192));
        jPanel1.setPreferredSize(new java.awt.Dimension(750, 400));

        jTabbedPane1.setBackground(new java.awt.Color(0, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Mã imel");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 40, -1, -1));
        jPanel2.add(txtMaDungLuong1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 20, 202, 1));

        buttonGroup1.add(rdo1);
        rdo1.setSelected(true);
        rdo1.setText("Online");
        rdo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdo1ActionPerformed(evt);
            }
        });
        jPanel2.add(rdo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 110, -1, -1));

        buttonGroup1.add(rdo2);
        rdo2.setText("Offline");
        jPanel2.add(rdo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 140, -1, -1));

        buttonGroup1.add(rdo3);
        rdo3.setText("Đang chờ hàng về");
        jPanel2.add(rdo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 110, -1, -1));

        buttonGroup1.add(rdo4);
        rdo4.setText("Ngừng bán");
        jPanel2.add(rdo4, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 140, -1, -1));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Trạng thái");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 90, -1, -1));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tblimei.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã Imei", "Trạng Thái", "Mã Sản Phẩm"
            }
        ));
        tblimei.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblimeiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblimei);

        txtTimKiemImei.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTimKiemImeiMouseClicked(evt);
            }
        });
        txtTimKiemImei.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemImeiKeyReleased(evt);
            }
        });

        buttonGroup2.add(rdLocOnline);
        rdLocOnline.setText("Online");
        rdLocOnline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdLocOnlineActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdLocDaBan);
        rdLocDaBan.setText("Đã bán");
        rdLocDaBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdLocDaBanActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdLocNgungBan);
        rdLocNgungBan.setText("Ngừng bán");
        rdLocNgungBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdLocNgungBanActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdLocDangChoHangve);
        rdLocDangChoHangve.setText("Đang chờ hàng về");
        rdLocDangChoHangve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdLocDangChoHangveActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdTatCa);
        rdTatCa.setText("Tất cả");
        rdTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdTatCaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                        .addComponent(txtTimKiemImei))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(rdLocOnline)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdLocDaBan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdLocDangChoHangve)
                        .addGap(18, 18, 18)
                        .addComponent(rdLocNgungBan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdTatCa)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimKiemImei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdLocOnline)
                    .addComponent(rdLocDaBan)
                    .addComponent(rdLocNgungBan)
                    .addComponent(rdLocDangChoHangve)
                    .addComponent(rdTatCa))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 530, 270));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        btnImport.setBackground(new java.awt.Color(51, 255, 51));
        btnImport.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnImport.setText("Import File");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delele.png"))); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/update (2).png"))); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add (2).png"))); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        cbxIdSp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxIdSpActionPerformed(evt);
            }
        });

        txtMaSanPham.setEditable(false);

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel8.setText("Mã Sản Phẩm");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Id Sản Phẩm");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtMaImei, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cbxIdSp, javax.swing.GroupLayout.Alignment.LEADING, 0, 200, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel8))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(txtMaImei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnUpdate)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(cbxIdSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addGap(25, 25, 25))))
        );

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, 400, 270));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        tblSanPhamBangImei.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã SP", "Tên SP", "Chíp", "Dung Lượng", "Kích Thước", "Màn Hình", "Màu Sắc", "Loại Hàng", "Pin", "Ram", "Xuất Xứ", "Số lượng", "Giá bán", "Trạng Thái SP", "Emei"
            }
        ));
        tblSanPhamBangImei.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamBangImeiMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblSanPhamBangImei);

        txtTimKiemSanPham.setBorder(null);
        txtTimKiemSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTimKiemSanPhamMouseClicked(evt);
            }
        });
        txtTimKiemSanPham.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemSanPhamKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemSanPhamKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 928, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiemSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(txtTimKiemSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 940, 260));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setText("Mã imel");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 40, -1, -1));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel6.setText("Mã imel");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 40, -1, -1));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel7.setText("IdSp");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 170, -1, -1));

        jTabbedPane1.addTab("Danh sách", jPanel2);

        jPanel3.setBackground(new java.awt.Color(37, 150, 190));

        tblimei1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã imei", "ID Sản Phẩm"
            }
        ));
        tblimei1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblimei1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblimei1);

        btnUpdate1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/update (2).png"))); // NOI18N
        btnUpdate1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdate1MouseClicked(evt);
            }
        });
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(btnUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 407, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnUpdate1, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(327, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Đã xoá", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jTabbedPane1)
                .addGap(60, 60, 60))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1053, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean checkRong() {
        if (txtMaImei.getText().isEmpty() && (rdo1.isSelected() == false
                && rdo2.isSelected() == false && rdo3.isSelected() == false
                && rdo4.isSelected() == false) && cbxIdSp.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "DỮ LIỆU KHÔNG ĐƯỢC ĐỂ RỖNG", "THÔNG BÁO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (txtMaImei.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "DỮ LIỆU MÃ IMEI KHÔNG ĐƯỢC ĐỂ RỖNG", "THÔNG BÁO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if ((rdo1.isSelected() == false && rdo2.isSelected() == false
                && rdo3.isSelected() == false && rdo4.isSelected() == false)) {
            JOptionPane.showMessageDialog(this, "DỮ LIỆU TRẠNG THÁI KHÔNG ĐƯỢC ĐỂ RỖNG", "THÔNG BÁO", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (cbxIdSp.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "DỮ LIỆU ID SẢN PHẨM KHÔNG ĐƯỢC ĐỂ RỖNG", "THÔNG BÁO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thêm ?", "Xác nhân thêm.", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            if (checkRong()) {
                if (!imeiService.checkTrungMaImei(txtMaImei.getText().trim())) {
                    ImeiViewModel imei = new ImeiViewModel();
                    imei.setMaImei(txtMaImei.getText().trim());
                    imei.setTrangThai(this.trangThai());
                    imei.setId_Sp(cbxIdSp.getSelectedItem().toString());
                    imeiService.addImei(imei);
                    imeiService.updateSoLuongSanPhamTrongImei(imei);
                    //sanPhamService.addSlSp(txtMaSanPham.getText());
                    JOptionPane.showMessageDialog(this, "Thêm thành công");
                    loadTableImei(imeiService.getAll());
                    loadTableSanPham(imeiService.selectAllSanPhamBangSanPham());
                    loadTbXoa();
                } else {
                    JOptionPane.showMessageDialog(this, "Mã imei đã tồn tại");
                    return;
                }
            } else {
                return;
            }
        } else {
            return;
        }
    }//GEN-LAST:event_btnAddActionPerformed

    public Map<String, String> test() {
        Map<String, String> testDate = new HashMap<String, String>();

        try {
            JFileChooser chooser = new JFileChooser();
            FileNameExtensionFilter fnef = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xlsm");
            chooser.setFileFilter(fnef);

            if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
                File fileSelected = chooser.getSelectedFile();
                FileInputStream input = new FileInputStream(fileSelected);
                Workbook workBook = new XSSFWorkbook(input);

                Sheet sheet = workBook.getSheetAt(0);
                int lastRow = sheet.getLastRowNum();
                for (int i = 0; i <= lastRow; i++) {
                    Row row = sheet.getRow(i);
                    Cell keyCell = row.getCell(0);
                    String key = keyCell.getStringCellValue().trim();

                    Cell ValuesCell = row.getCell(1);
                    String Valueskey = ValuesCell.getStringCellValue().trim();
                    testDate.put(key, Valueskey);
                }
            }
        } catch (Exception e) {
        }
        return testDate;
    }

    private ArrayList<ImeiViewModel> listImei = imeiService.getAll();
    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        try {
            Map<String, String> testDate = test();
            for (Map.Entry<String, String> map : testDate.entrySet()) {
                System.out.println("key" + map.getKey());
//             
                ImeiViewModel ii = new ImeiViewModel();
                ii.setMaImei(map.getKey());
                ii.setId_Sp(map.getValue());
                imeiService.them(ii);
                loadTableImei(imeiService.getAll());
                loadTableSanPham(imeiService.selectAllSanPhamBangSanPham());
                imeiService.updateSoLuongSanPhamTrongImei(ii);
            }
        } catch (Exception e) {
            return;
        }
    }//GEN-LAST:event_btnImportActionPerformed

    private void cbxIdSpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxIdSpActionPerformed
        if (cbxIdSp.getSelectedItem().toString() != cbxIdSp.getItemAt(0)) {
            txtMaSanPham.setText(cbxIdSp.getSelectedItem().toString());
        } else {
            txtMaSanPham.setText("NULL");
        }

    }//GEN-LAST:event_cbxIdSpActionPerformed

    private void rdo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdo1ActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa ?", "Xác nhân xóa.", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            if (imeiService.deleteImei(txtMaImei.getText().trim())) {
                sanPhamService.addSlSp(txtMaSanPham.getText().trim());
                JOptionPane.showMessageDialog(this, "XOÁ THÀNH CÔNG");
                loadTableImei(imeiService.getAll());
                loadTbXoa();
            } else {
                JOptionPane.showMessageDialog(this, "XOÁ THẤT BẠI");
                return;
            }
        } else {
            return;
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn sửa ?", "Xác nhân sửa.", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            if (imeiService.checkTrungMaImei(txtMaImei.getText().trim())) {
                if (imeiService.trangThaiImei(txtMaImei.getText().trim()) == 5) {
                    JOptionPane.showMessageDialog(this, "IMEI Đang Trong Giỏ Hàng Không Thể Cập Nhật!", "THÔNG BÁO", JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    ImeiViewModel imei = new ImeiViewModel();
                    imei.setMaImei(txtMaImei.getText().trim());
                    imei.setTrangThai(this.trangThai());
                    imei.setId_Sp((String) cbxIdSp.getSelectedItem().toString().trim());
                    imeiService.update(imei);
//            sanPhamService.addSlSp(txtMaSanPham.getText());
                    JOptionPane.showMessageDialog(this, "Sửa thành công");
                    loadTableImei(imeiService.getAll());
                    loadTbXoa();
                }
            }else{
                JOptionPane.showMessageDialog(this, "Mã imei không tồn tại");
                return;
            }
        } else {
            return;
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblimeiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblimeiMouseClicked
        if (tblimei.getValueAt(tblimei.getSelectedRow(), 2).toString() != "NULL") {
            int row = tblimei.getSelectedRow();
            txtMaImei.setText(tblimei.getValueAt(row, 0).toString());
            if (tblimei.getValueAt(row, 1).toString().equals("Online")) {
                rdo1.setSelected(true);
            } else if (tblimei.getValueAt(row, 1).toString().equals("Offline")) {
                rdo2.setSelected(true);
            } else if (tblimei.getValueAt(row, 1).toString().equals("Đang chờ hàng về")) {
                rdo3.setSelected(true);
            } else if (tblimei.getValueAt(row, 1).toString().equals("Ngừng bán")) {
                rdo4.setSelected(true);
            }

            cbxIdSp.getModel().setSelectedItem(tblimei.getValueAt(row, 2).toString());
            txtMaSanPham.setText(tblimei.getValueAt(row, 2).toString());

        } else {
            txtMaImei.setText(tblimei.getValueAt(tblimei.getSelectedRow(), 0).toString());
            if (tblimei.getValueAt(tblimei.getSelectedRow(), 1).toString().equals("Online")) {
                rdo1.setSelected(true);
            } else if (tblimei.getValueAt(tblimei.getSelectedRow(), 1).toString().equals("Offline")) {
                rdo2.setSelected(true);
            } else if (tblimei.getValueAt(tblimei.getSelectedRow(), 1).toString().equals("Đang chờ hàng về")) {
                rdo3.setSelected(true);
            } else {
                rdo4.setSelected(true);
            }
            cbxIdSp.getModel().setSelectedItem(cbxIdSp.getItemAt(0).toString());
            txtMaSanPham.setText("NULL");
        }
    }//GEN-LAST:event_tblimeiMouseClicked

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn hoàn tác ?", "Xác nhân hoàn tác.", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            int row = tblimei1.getSelectedRow();
            if (row != (-1)) {
                try {
                    ImeiViewModel imei = new ImeiViewModel();
                    imei.setMaImei(tblimei1.getValueAt(tblimei1.getSelectedRow(), 0).toString());
                    //imei.setTrangThai(this.trangThai());
                    imeiService.hoanTac(imei);
                    JOptionPane.showMessageDialog(this, "Hoàn tác thành công");
                    loadTableImei(imeiService.getAll());
                    loadTbXoa();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Xin mời chọn imei trong table", "THÔNG BÁO", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else {
            return;
        }

    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void btnUpdate1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdate1MouseClicked

    private void tblimei1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblimei1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblimei1MouseClicked

    private void txtTimKiemImeiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemImeiKeyReleased
//        String timKiem = txtTimKiemImei.getText().trim();

        DefaultTableModel model = (DefaultTableModel) tblimei.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(model);
        tblimei.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(txtTimKiemImei.getText().trim()));

    }//GEN-LAST:event_txtTimKiemImeiKeyReleased

    private void txtTimKiemImeiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTimKiemImeiMouseClicked
        txtTimKiemImei.setText("");
    }//GEN-LAST:event_txtTimKiemImeiMouseClicked

    private void txtTimKiemSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTimKiemSanPhamMouseClicked
        txtTimKiemSanPham.setText("");
    }//GEN-LAST:event_txtTimKiemSanPhamMouseClicked

    private void txtTimKiemSanPhamKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemSanPhamKeyPressed
        // TODO add your handling code here: Nhầm
    }//GEN-LAST:event_txtTimKiemSanPhamKeyPressed

    private void txtTimKiemSanPhamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemSanPhamKeyReleased
//        String timKiem = txtTimKiemSanPham.getText().trim();

        DefaultTableModel model = (DefaultTableModel) tblSanPhamBangImei.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(model);
        tblSanPhamBangImei.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(txtTimKiemSanPham.getText().trim()));
    }//GEN-LAST:event_txtTimKiemSanPhamKeyReleased

    private void tblSanPhamBangImeiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamBangImeiMouseClicked
        int row = tblSanPhamBangImei.getSelectedRow();
        cbxIdSp.getModel().setSelectedItem(tblSanPhamBangImei.getValueAt(row, 0).toString());
        txtMaSanPham.setText(tblSanPhamBangImei.getValueAt(row, 0).toString());
    }//GEN-LAST:event_tblSanPhamBangImeiMouseClicked

    private void rdLocOnlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdLocOnlineActionPerformed
        loadTableImei(imeiService.locOnline());
    }//GEN-LAST:event_rdLocOnlineActionPerformed

    private void rdLocDaBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdLocDaBanActionPerformed
        loadTableImei(imeiService.locDaBan());

    }//GEN-LAST:event_rdLocDaBanActionPerformed

    private void rdLocDangChoHangveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdLocDangChoHangveActionPerformed
        loadTableImei(imeiService.locDangVe());

    }//GEN-LAST:event_rdLocDangChoHangveActionPerformed

    private void rdLocNgungBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdLocNgungBanActionPerformed
        loadTableImei(imeiService.locNgungBan());

    }//GEN-LAST:event_rdLocNgungBanActionPerformed

    private void rdTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdTatCaActionPerformed
        loadTableImei(imeiService.getAll());
    }//GEN-LAST:event_rdTatCaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormImei.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormImei.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormImei.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormImei.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormImei().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbxIdSp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rdLocDaBan;
    private javax.swing.JRadioButton rdLocDangChoHangve;
    private javax.swing.JRadioButton rdLocNgungBan;
    private javax.swing.JRadioButton rdLocOnline;
    private javax.swing.JRadioButton rdTatCa;
    private javax.swing.JRadioButton rdo1;
    private javax.swing.JRadioButton rdo2;
    private javax.swing.JRadioButton rdo3;
    private javax.swing.JRadioButton rdo4;
    private javax.swing.JTable tblSanPhamBangImei;
    private javax.swing.JTable tblimei;
    private javax.swing.JTable tblimei1;
    private javax.swing.JTextField txtMaDungLuong1;
    private javax.swing.JTextField txtMaImei;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextField txtTimKiemImei;
    private javax.swing.JTextField txtTimKiemSanPham;
    // End of variables declaration//GEN-END:variables
}
