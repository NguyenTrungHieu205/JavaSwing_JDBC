/*
............/´¯/)........... (\¯'\
............/....//........... ...\\....\
.........../....//............ ....\\....\
...../´¯/..../´¯\.........../¯ '\....\¯'\
.././.../..../..../.|_......_| .\....\....\...\.\..
(.(....(....(..../.)..)..(..(. \....)....)....).)
.\................\/.../....\. ..\/................/
..\................. /........\..................../
....\..............(.......... ..)................/           


 */
package view;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class QuetMaNhanVien extends javax.swing.JFrame implements Runnable, ThreadFactory{

    /**
     * Creates new form QuetMaNhanVien
     */
    public QuetMaNhanVien() {
        initComponents();
        initWebCam();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
    private WebcamPanel panel = null;
    private Webcam webcam = null;

    private static final long serial = 6441489157408381878L;
    private Executor ex = Executors.newSingleThreadExecutor(this);
    public static String ten;
    public static String tenDem;
    public static String ho;
    public static String ngaySinh;
    public static String gioiTinh;
    public static String diaChi;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Chuoi = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/signout_106525.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(342, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 191, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      FormNhanVien kh=new FormNhanVien();
      kh.setVisible(true);
      this.dispose();
      webcam.close();
    }//GEN-LAST:event_jButton1ActionPerformed
      public void initWebCam() {
        Dimension size = WebcamResolution.QVGA.getSize();
        webcam = Webcam.getWebcams().get(0);
        webcam.setViewSize(size);

        panel = new WebcamPanel(webcam);
        panel.setPreferredSize(size);
        panel.setFPSDisplayed(true);

        jPanel1.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0,200,200));
         
        ex.execute(this);
      
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuetMaNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuetMaNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuetMaNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuetMaNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuetMaNhanVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Chuoi;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
 do {

            try {
                Thread.sleep(100);

            } catch (Exception e) {
                System.out.println(e);
            }

            Result result = null;
            BufferedImage image = null;

            if (webcam.isOpen()) {
                if ((image = webcam.getImage()) == null) {
                    continue;
                }
            }
            LuminanceSource source = new BufferedImageLuminanceSource(image);
            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));

            try {
                result = new MultiFormatReader().decode(bitmap);
            } catch (Exception e) {
            }
            if (result != null) {

                try {
                    Chuoi.setText(result.getText());
                    String chuoi = Chuoi.getText();
                    String nganCach = "|";

                    int soCmt = chuoi.indexOf(nganCach); // lấy ra vị trí
                    String soCanCuocCongDan = chuoi.substring(0, soCmt);
//        txtSoCmt.setText(soCanCuocCongDan);

                    int soCMTCu = chuoi.indexOf(nganCach, soCmt + 1);// lấy ra vị trí
                    String sochungMinhThu = chuoi.substring(soCmt + 1, soCMTCu);
                    System.out.println(sochungMinhThu);
//     

                    int hoTen = chuoi.indexOf(nganCach, soCMTCu + 1);// lấy ra vị trí
                    String hoVaTen = chuoi.substring(soCMTCu + 1, hoTen);

                    String khoangTrang = " ";

                    int ho = hoVaTen.indexOf(khoangTrang);
                    QuetMaNhanVien.ho = hoVaTen.substring(0, ho);
//                    System.out.println(ho1);

//                    txtHo.setText(ho1);

//      txtHoTen.setText(hoVaTen);
                    int ten = hoVaTen.lastIndexOf(khoangTrang, hoVaTen.length()) + 1;
                   QuetMaNhanVien.ten = hoVaTen.substring(ten, hoVaTen.length());
//                    System.out.println(ten1);
//                    txtTen.setText(ten1);

                    int tenDem = hoVaTen.indexOf(ten, ho + 1);
                   QuetMaNhanVien.tenDem = hoVaTen.substring(ho + 1, ten);
//                    System.out.println(tenDem1);
//                    txtTenDem.setText(tenDem1);
//        txtHoTen.setText(hoVaTen);

                    int ngaySinh1 = chuoi.indexOf(nganCach, hoTen + 1);// lấy ra vị trí
                    String ngaySinh = chuoi.substring(hoTen + 1, ngaySinh1);
                    SimpleDateFormat simDate = new SimpleDateFormat("dd-MM-yyyy");
                    String catNgaySinh = ngaySinh.substring(0, 2);
                    String catThangSinh = ngaySinh.substring(2, 4);
                    String catNamSinh = ngaySinh.substring(4, 8);
                   QuetMaNhanVien.ngaySinh = catNamSinh + "-" + catThangSinh + "-" + catNgaySinh;
//                    txtNgaySinh.setDate(LocalDate.parse(gepNgaySing));
//        System.out.println(catNgaySinh);
//        System.out.println(catThangSinh);
//        System.out.println(catNamSinh);
//        
//        txtNgaySinh.setText(gepNgaySing);
//
//                try {
//                    System.out.println(simDate.parse(gepNgaySing));
////       
//                } catch (ParseException ex) {
//                   
//                }
                    int i = chuoi.indexOf(nganCach, ngaySinh1 + 1);// lấy ra vị trí
                   gioiTinh = chuoi.substring(ngaySinh1 + 1, i);
                    System.out.println(gioiTinh);

//                    if (gioiTinh.equals("Nam")) {
//                        rdNam.setSelected(true);
//                    } else {
//                        rdNu.setSelected(true);
//                    }
//
                    int diaChi1 = chuoi.indexOf(nganCach, i + 1);// lấy ra vị trí
                     diaChi = chuoi.substring(i + 1, diaChi1);
                    System.out.println(diaChi);
//                    txtDiaChi.setText(diaChi);
//                    txtMaNhanVien.setText("");
                    JOptionPane.showMessageDialog(this, "Quét Mã Thành Công");
                    return;
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Quét Mã Thất Bại");
                    return;
                }
                
//
//         int b = chuoi.lastIndexOf(nganCach, chuoi.length()) + 1;// lấy ra vị trí
//        String ngayCap = chuoi.substring(b, chuoi.length());
//        String catNgayCap = ngayCap.substring(0, 2);
//        String catThangCap = ngayCap.substring(2, 4);
//        String catNamCap = ngayCap.substring(4, 8);
//               
//        String cap=catNgayCap+"-"+ catThangCap+"-"+catNamCap;
//        
//        
//        txtNgayCap.setText(cap);
//        
//        
//        System.out.println(cap);
//        049202000284||Khuất Lưu Huy Nhật|24022002|Nam|Cẩm Bào, Cẩm Yên, Thạch Thất, Hà Nội|31052021
//         int f = chuoi.indexOf(nganCach, e + 1);// lấy ra vị trí
//        String ngaySinh = chuoi.substring(e + 1, f);
//        SimpleDateFormat simDate = new SimpleDateFormat("dd-MM-yyyy");
//        String catNgaySinh = ngaySinh.substring(0, 2);
//        String catThangSinh = ngaySinh.substring(2, 4);
//        String catNamSinh = ngaySinh.substring(4, 8);
//        String gepNgaySing =   catNgaySinh + "-" + catThangSinh + "-" + catNamSinh;
            }

        } while (true);
    }

    @Override
    public Thread newThread(Runnable r) {
    Thread t = new Thread(r, "My Thread");
        t.setDaemon(true);
        return t;
    }
}
