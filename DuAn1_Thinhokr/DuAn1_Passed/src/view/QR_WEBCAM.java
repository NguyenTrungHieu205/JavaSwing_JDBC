/*                          
                            +====================+
                            |                    |
                            |     TIRICNGUYEN    |
                            |                    |
                            +====================+  
 */
package view;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Admin
 */
public class QR_WEBCAM extends javax.swing.JFrame implements Runnable, ThreadFactory {

    private WebcamPanel panel = null;
    private Webcam webcam = null;

    private static final long serial = 6441489157408381878L;
    private Executor ex = Executors.newSingleThreadExecutor(this);

    public QR_WEBCAM() {
        initComponents();
        initWebCam();
//        tachChuoi();
        txtSoCmt.setText(txtCmt.getText());
    }
    private void tachChuoi(){
        String nganCach="|";
        int i=txtCmt.getText().indexOf(nganCach);
        String soCanCuoc=txtCmt.getText().substring(0,i);
//        txtCmt.setText(soCanCuoc);
        txtSoCmt.setText(soCanCuoc);
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtCmt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        result_Field1 = new javax.swing.JTextField();
        txtSoCmt = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtGioiTinh1 = new javax.swing.JTextField();
        txtNgayCap = new javax.swing.JTextField();
        rdNam = new javax.swing.JRadioButton();
        rdNu = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCmtActionPerformed(evt);
            }
        });
        jPanel1.add(txtCmt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 320, 40));

        jLabel1.setText("QR");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 70, 30));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 240, 230));

        result_Field1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                result_Field1ActionPerformed(evt);
            }
        });
        jPanel1.add(result_Field1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 320, 40));
        jPanel1.add(txtSoCmt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 450, 320, 40));
        jPanel1.add(txtHoTen, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 510, 320, 40));
        jPanel1.add(txtNgaySinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, 230, -1));
        jPanel1.add(txtDiaChi, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 510, 230, -1));
        jPanel1.add(txtGioiTinh1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 460, 230, -1));
        jPanel1.add(txtNgayCap, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 560, 210, -1));

        rdNam.setText("Nam");
        jPanel1.add(rdNam, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 390, -1, -1));

        rdNu.setText("Nữ");
        jPanel1.add(rdNu, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 450, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCmtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCmtActionPerformed

    private void result_Field1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_result_Field1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_result_Field1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QR_WEBCAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QR_WEBCAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QR_WEBCAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QR_WEBCAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new QR_WEBCAM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton rdNam;
    private javax.swing.JRadioButton rdNu;
    private javax.swing.JTextField result_Field1;
    private javax.swing.JTextField txtCmt;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtGioiTinh1;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtNgayCap;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSoCmt;
    // End of variables declaration//GEN-END:variables

    public void initWebCam() {
        Dimension size = WebcamResolution.QVGA.getSize();
        webcam = Webcam.getWebcams().get(0);
        webcam.setViewSize(size);

        panel = new WebcamPanel(webcam);
        panel.setPreferredSize(size);
        panel.setFPSDisplayed(true);

        jPanel2.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0,200,200));

        ex.execute(this);

    }

    @Override
    public void run() {
        do {
            
            try {
                Thread.sleep(100);
            } catch (Exception e) {
                System.out.println(e);
            }
            
            Result result = null;
            BufferedImage image = null;

            if (webcam.isOpen()) {
                if ((image = webcam.getImage()) == null) {
                    continue;
                }
            }
            LuminanceSource source = new BufferedImageLuminanceSource(image);
            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));

            
            try {
                result = new MultiFormatReader().decode(bitmap);
            } catch (Exception e) {
            }
            if(result != null){
                
                txtCmt.setText(result.getText());
                String chuoi=txtCmt.getText();
                 String nganCach="|";
//                 String nganCach1="||";
//        int i=chuoi.indexOf(nganCach);
//        String soCanCuoc=chuoi.substring(0,i);
//        cmt.setText(soCanCuoc);
        
        int  c= chuoi.indexOf(nganCach); // lấy ra vị trí
        String soCanCuocCongDan = chuoi.substring(0, c);
        txtSoCmt.setText(soCanCuocCongDan);

        int d = chuoi.indexOf(nganCach, c + 1);// lấy ra vị trí
        String sochungMinhThu = chuoi.substring(c + 1, d);
        System.out.println(sochungMinhThu);

        int e = chuoi.indexOf(nganCach, d + 1);// lấy ra vị trí
        
        String hoVaTen = chuoi.substring(d + 1, e);
        
        
        String khoangTrang=" ";
        
          int ho=hoVaTen.indexOf(khoangTrang);
        String ho1=hoVaTen.substring(0,ho);
                System.out.println(ho1);
                
        
      txtHoTen.setText(hoVaTen);
      
      
      int ten=hoVaTen.lastIndexOf(khoangTrang,hoVaTen.length())+1;
      String ten1=hoVaTen.substring(ten,hoVaTen.length());
                System.out.println(ten1);
                
        int tenDem=hoVaTen.indexOf(ten,ho+1);
         String tenDem1=hoVaTen.substring(ho+1,ten);
                System.out.println(tenDem1); 
        
         int f = chuoi.indexOf(nganCach, e + 1);// lấy ra vị trí
        String ngaySinh = chuoi.substring(e + 1, f);
        SimpleDateFormat simDate = new SimpleDateFormat("dd-MM-yyyy");
        String catNgaySinh = ngaySinh.substring(0, 2);
        String catThangSinh = ngaySinh.substring(2, 4);
        String catNamSinh = ngaySinh.substring(4, 8);
        String gepNgaySing =   catNgaySinh + "-" + catThangSinh + "-" + catNamSinh;

        System.out.println(catNgaySinh);
        System.out.println(catThangSinh);
        System.out.println(catNamSinh);
        
        txtNgaySinh.setText(gepNgaySing);

                try {
                    System.out.println(simDate.parse(gepNgaySing));
//       
                } catch (ParseException ex) {
                   
                }
         int i = chuoi.indexOf(nganCach, f + 1);// lấy ra vị trí
        String gioiTinh = chuoi.substring(f + 1, i);
        System.out.println(gioiTinh);
        txtGioiTinh1.setText(gioiTinh);
        if(gioiTinh.equals("Nam")){
            rdNam.setSelected(true);
        }

        int k = chuoi.indexOf(nganCach, i + 1);// lấy ra vị trí
        String diaChi = chuoi.substring(i + 1, k);
        System.out.println(diaChi);
        txtDiaChi.setText(diaChi);

         int b = chuoi.lastIndexOf(nganCach, chuoi.length()) + 1;// lấy ra vị trí
        String ngayCap = chuoi.substring(b, chuoi.length());
        String catNgayCap = ngayCap.substring(0, 2);
        String catThangCap = ngayCap.substring(2, 4);
        String catNamCap = ngayCap.substring(4, 8);
               
        String cap=catNgayCap+"-"+ catThangCap+"-"+catNamCap;
        
        
        txtNgayCap.setText(cap);
        
        
        System.out.println(cap);
        
//        049202000284||Khuất Lưu Huy Nhật|24022002|Nam|Cẩm Bào, Cẩm Yên, Thạch Thất, Hà Nội|31052021
//         int f = chuoi.indexOf(nganCach, e + 1);// lấy ra vị trí
//        String ngaySinh = chuoi.substring(e + 1, f);
//        SimpleDateFormat simDate = new SimpleDateFormat("dd-MM-yyyy");
//        String catNgaySinh = ngaySinh.substring(0, 2);
//        String catThangSinh = ngaySinh.substring(2, 4);
//        String catNamSinh = ngaySinh.substring(4, 8);
//        String gepNgaySing =   catNgaySinh + "-" + catThangSinh + "-" + catNamSinh;
               
            }
        
        }while (true);          
               
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "My Thread");
        t.setDaemon(true);
        return t;
    }
}
